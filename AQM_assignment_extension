#### Creating distance terciles for labour and labour + other all, as well as a plot point for London ####

# Reloading data and locdata for clean slate

load("/Users/victormordhorst/Documents/RFiler/AQM/data_mpyear.rda")
load("/Users/victormordhorst/Documents/RFiler/AQM/employment_coords.rda")

# Removing MPs who work in foreign countries

locdata <- locdata[locdata$foreign == 0,]

# Getting coordinates for City of London and saving them

CoL_y <- 51.51279 
CoL_x <- -0.09184

# Making map of UK, limited to only third tercile
UK <- map_data(map = "world", region = "UK") 


# Merging these into the locdata by taking the difference between x and y, and then adding those together

locdata$london.x <- abs(CoL_x - locdata$employ.x)
locdata$london.y <- abs(CoL_y - locdata$employ.y)
locdata$london <- locdata$london.x + locdata$london.y

# Merging these facts into the main dataframe

data <- data %>%
  mutate(london = abs(CoL_x - const.x) + abs(CoL_y - const.y))

### Making terciles for Labour with regard to distance to London

tert_lab <- quantile(data$london[data$lab == 1], c(0:3/3))

data <- data %>%
  mutate(dist.tercile.lab = ifelse(lab == 1, cut(london, tert_lab, include.lowest = TRUE, labels = c(1, 2, 3)), NA))

### Making terciles for labour and others (ncon) with regard to distance to London

tert_ncon <- quantile(data$london[data$con == 0], c(0:3/3))

data <- data %>%
  mutate(dist.tercile.ncon = ifelse(con == 0, cut(london, tert_ncon, include.lowest = TRUE, labels = c(1, 2, 3)), NA))

### Merging these into locdata

id_terts <- data %>%
  select(id, dist.tercile.lab, dist.tercile.ncon)

id_terts <- id_terts %>%
  distinct(id, .keep_all = TRUE)

locdata$id <- as.numeric(locdata$id)

locdata <- left_join(locdata, id_terts, by = "id")

# I need to include a "group" variable to make the map work, just 1

locdata$group <- 1
data$group <- 1

#### Figure 2a ####

### Labour ###

# Running regressions

lab_1 <- feols(present ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$lab==1 & data$dist.tercile.lab==1,])
summary(lab_1)

lab_2 <- feols(present ~ bin.1000+ frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$lab==1 & data$dist.tercile.lab==2,])
summary(lab_2)

lab_3 <- feols(present ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$lab==1 & data$dist.tercile.lab==3,])
summary(lab_3)

# Confidence errors calculated by copying outputs from the summaries above

lab_terciles <- data.frame(param = c("Lowest Tercile", "Middle Tercile", "Highest Tercile"),
                           low = c(lab_1$coefficients[1] - 1.96*lab_1$se[1], lab_2$coefficients[1] - 1.96*lab_2$se[1], lab_3$coefficients[1] - 1.96*lab_3$se[1]),
                           est = c(lab_1$coefficients[1], lab_2$coefficients[1], lab_3$coefficients[1]),
                           high = c(lab_1$coefficients[1] + 1.96*lab_1$se[1], lab_2$coefficients[1] + 1.96*lab_2$se[1], lab_3$coefficients[1] + 1.96*lab_3$se[1]))

# Making a figure like 2a

d2_lab_f <- ggplot(lab_terciles, aes(x = factor(param, c("Lowest Tercile", "Middle Tercile", "Highest Tercile")), y=est)) + 
  ggtitle("(a) Effect of Moonlighting on Vote Attendance.\n By constituency distance to London as the crow flies, only Labour MPs") + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "darkred") + 
  scale_x_discrete("") + 
  scale_y_continuous(breaks = scales::pretty_breaks(n = 20)) +
  ylab("Regression coefficients") +
  geom_hline(yintercept=0, color="black") + 
  theme_bw() + 
  theme(text = element_text(size=10))

### All ###

ncon_1 <- feols(present ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$dist.tercile.ncon==1,])
summary(lab_1)

ncon_2 <- feols(present ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$dist.tercile.ncon==2,])
summary(lab_2)

ncon_3 <- feols(present ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$dist.tercile.ncon==3,])
summary(lab_3)

# Confidence errors calculated by copying outputs from the summaries above

ncon_terciles <- data.frame(param = c("Lowest Tercile", "Middle Tercile", "Highest Tercile"),
                            low = c(ncon_1$coefficients[1] - 1.96*ncon_1$se[1], ncon_2$coefficients[1] - 1.96*ncon_2$se[1], ncon_3$coefficients[1] - 1.96*ncon_3$se[1]),
                            est = c(ncon_1$coefficients[1], ncon_2$coefficients[1], ncon_3$coefficients[1]),
                            high = c(ncon_1$coefficients[1] + 1.96*ncon_1$se[1], ncon_2$coefficients[1] + 1.96*ncon_2$se[1], ncon_3$coefficients[1] + 1.96*ncon_3$se[1]))

# Making a figure like 2a

d2_ncon_f <- ggplot(ncon_terciles, aes(x = factor(param, c("Lowest Tercile", "Middle Tercile", "Highest Tercile")), y=est)) + 
  ggtitle("(a) Effect of Moonlighting on Vote Attendance.\n By constituency distance to London as the crow flies, all non-Conservative MPs") + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "darkgreen") + 
  scale_x_discrete("") + 
  scale_y_continuous(breaks = scales::pretty_breaks(n = 20)) +
  ylab("Regression coefficients") +
  geom_hline(yintercept=0, color="black") + 
  theme_bw() + 
  theme(text = element_text(size=10))

# Altering the original for conservatives to make it fit the theming. Note that I'm just using d2c - the data is ready

d2_con_f <- ggplot(d2_c, aes(x = factor(param, c("Lowest Tercile", "Middle Tercile", "Highest Tercile")), y=est)) + 
  ggtitle("(a) Effect of Moonlighting on Vote Attendance.\n By constituency distance to London as the crow flies, only Conservative MPs") + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "blue") + 
  scale_x_discrete("") + 
  scale_y_continuous(breaks = scales::pretty_breaks(n = 20)) +
  ylab("Regression coefficients") +
  geom_hline(yintercept=0, color="black") + 
  theme_bw() + 
  theme(text = element_text(size=10))

#### Figure 2b ####

# Map 2b for Conservatives

UK_map_con <- ggplot(data = UK, aes(x = long, y = lat, group = group)) + 
  geom_polygon(fill = "white", colour = "black") +
  coord_map(ylim = c(50, 59)) +
  geom_point(data = data[data$dist.tercile.con == 3,], aes(x = const.x, y = const.y), col = "grey", alpha = 0.3, size = 1.5) + 
  geom_point(data = locdata[locdata$dist.tercile.con == 3,], aes(x = const.x, y = const.y), col = "black", alpha = 1, size = 2.5) +
  geom_segment(data = locdata[locdata$dist.tercile.con == 3,], aes(x = employ.x, y = employ.y, xend = const.x, yend = const.y, color = london), 
               arrow = arrow(length = unit(0.2, "cm"), ends = "first"), alpha = 0.35) + 
  scale_color_gradient(low = "blue", high = "lightblue") +
  theme_void() + 
  theme(legend.position = "none")

#### Map 2b for Labour ####

UK_map_lab <- ggplot(data = UK, aes(x = long, y = lat, group = group)) + 
  geom_polygon(fill = "white", colour = "black") +
  coord_map(ylim = c(50, 59)) +
  geom_point(data = data[data$dist.tercile.lab == 3,], aes(x = const.x, y = const.y), col = "grey", alpha = 0.3, size = 1.5) + 
  geom_point(data = locdata[locdata$dist.tercile.lab == 3,], aes(x = const.x, y = const.y), col = "black", alpha = 1, size = 2.5) +
  geom_segment(data = locdata[locdata$dist.tercile.lab == 3,], aes(x = employ.x, y = employ.y, xend = const.x, yend = const.y, color = london), 
               arrow = arrow(length = unit(0.2, "cm"), ends = "first"), alpha = 0.35) + 
  scale_color_gradient(low = "red", high = "yellow") +
  theme_void() + 
  theme(legend.position = "none")

#### Map 2b for nCon ####

UK_map_ncon <- ggplot(data = UK, aes(x = long, y = lat, group = group)) + 
  geom_polygon(fill = "white", colour = "black") +
  coord_map(ylim = c(50, 59)) +
  geom_point(data = data[data$dist.tercile.ncon == 3,], aes(x = const.x, y = const.y), col = "grey", alpha = 0.3, size = 1.5) + 
  geom_point(data = locdata[locdata$dist.tercile.ncon == 3,], aes(x = const.x, y = const.y), col = "black", alpha = 1, size = 2.5) +
  geom_segment(data = locdata[locdata$dist.tercile.ncon == 3,], aes(x = employ.x, y = employ.y, xend = const.x, yend = const.y, color = london), 
               arrow = arrow(length = unit(0.2, "cm"), ends = "first"), alpha = 0.35) + 
  scale_color_gradient(low = "darkgreen", high = "lightgreen") +
  theme_void() + 
  theme(legend.position = "none")

#### Figure 2c ####

# Running regressions

clab_1 <- feols(expense.accomodation.rent.bin ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$lab==1 & data$dist.tercile.lab==1,])
summary(clab_1)

clab_2 <- feols(expense.accomodation.rent.bin ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$lab==1 & data$dist.tercile.lab==2,])
summary(clab_2)

clab_3 <- feols(expense.accomodation.rent.bin ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$lab==1 & data$dist.tercile.lab==3,])
summary(clab_3)

# Confidence errors calculated by copying outputs from the summaries above

clab_terciles <- data.frame(param = c("Lowest Tercile", "Middle Tercile", "Highest Tercile"),
                            low = c(clab_1$coefficients[1] - 1.96*clab_1$se[1], clab_2$coefficients[1] - 1.96*clab_2$se[1], clab_3$coefficients[1] - 1.96*clab_3$se[1]),
                            est = c(clab_1$coefficients[1], clab_2$coefficients[1], clab_3$coefficients[1]),
                            high = c(clab_1$coefficients[1] + 1.96*clab_1$se[1], clab_2$coefficients[1] + 1.96*clab_2$se[1], clab_3$coefficients[1] + 1.96*clab_3$se[1]))

# Making a figure like 2c

d2_clab_f <- ggplot(clab_terciles, aes(x = factor(param, c("Lowest Tercile", "Middle Tercile", "Highest Tercile")), y=est)) + 
  ggtitle("(a) Effect of Moonlighting on Probability of claiming London Allowance.\n By constituency distance to London as the crow flies, only Labour MPs") + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "darkred") + 
  scale_x_discrete("") + 
  scale_y_continuous(breaks = scales::pretty_breaks(n = 20)) +
  ylab("Regression coefficients") +
  geom_hline(yintercept=0, color="black") + 
  theme_bw() + 
  theme(text = element_text(size=10))

### All ###

call_1 <- feols(expense.accomodation.rent.bin ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$dist.tercile.ncon==1,])
summary(lab_1)

call_2 <- feols(expense.accomodation.rent.bin ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$dist.tercile.ncon==2,])
summary(lab_2)

call_3 <- feols(expense.accomodation.rent.bin ~ bin.1000 + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$dist.tercile.ncon==3,])
summary(lab_3)

# Confidence errors calculated by copying outputs from the summaries above

call_terciles <- data.frame(param = c("Lowest Tercile", "Middle Tercile", "Highest Tercile"),
                            low = c(call_1$coefficients[1] - 1.96*call_1$se[1], call_2$coefficients[1] - 1.96*call_2$se[1], call_3$coefficients[1] - 1.96*call_3$se[1]),
                            est = c(call_1$coefficients[1], call_2$coefficients[1], call_3$coefficients[1]),
                            high = c(call_1$coefficients[1] + 1.96*call_1$se[1], call_2$coefficients[1] + 1.96*call_2$se[1], call_3$coefficients[1] + 1.96*call_3$se[1]))

# Making a figure like 2c

d2_call_f <- ggplot(call_terciles, aes(x = factor(param, c("Lowest Tercile", "Middle Tercile", "Highest Tercile")), y=est)) + 
  ggtitle("(a) Effect of Moonlighting on Probability of claiming London Allowance.\n By constituency distance to London as the crow flies, all MPs") + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "darkgreen") + 
  scale_x_discrete("") + 
  scale_y_continuous(breaks = scales::pretty_breaks(n = 20)) +
  ylab("Regression coefficients") +
  geom_hline(yintercept=0, color="black") + 
  theme_bw() + 
  theme(text = element_text(size=10))

### Again making one for Conservatives to fit the theming

d2_ccon_f <- ggplot(d2_c, aes(x = factor(param, c("Lowest Tercile", "Middle Tercile", "Highest Tercile")), y=est)) + 
  ggtitle("(a) Effect of Moonlighting on Probability of claiming London Allowance.\n By constituency distance to London as the crow flies, all MPs") + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "darkblue") + 
  scale_x_discrete("") + 
  scale_y_continuous(breaks = scales::pretty_breaks(n = 20)) +
  ylab("Regression coefficients") +
  geom_hline(yintercept=0, color="black") + 
  theme_bw() + 
  theme(text = element_text(size=10))

#### For discussion - the number of directors who work in knowledge for profit and the number of directors ####

# Conservative directors

n_distinct(data$id[data$con == 1 & data$job_director])

# Conservative knowledge-for-profit

n_distinct(data$id[data$con == 1 & data$indcat_knowledge_fp])
