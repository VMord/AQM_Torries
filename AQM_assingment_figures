# Load the necessary library
library(ggplot2)
library(dplyr)
library(tidyr)
library(sjPlot)
library(gridExtra)
library(cowplot)
library(ggpubr)
library(forcats)
library(lfe)
library(stringr)
library(fixest) 
library(modelsummary)
library(kableExtra)
library(tidyverse)
library(maps)
library(mapproj)
library(grid)
library(ggpp)
library(ggpmisc)

load("/Users/thomaspadkjaer/Downloads/data_mpyear.rda")
# Assuming the data is loaded into a variable named 'data'
# Replace 'data' with the actual name of the data frame in your RDA file


#### FIGURE 1 ####
## Panel a ###

d1_a <- data %>%
  group_by(year) %>%
  summarize(
    sum_all = sum(earnings.all.infl)/1000000,
    sum_con = sum(earnings.all.infl[con == 1]/1000000),
    sum_lab = sum(earnings.all.infl[lab == 1]/1000000),
    sum_oth = sum(earnings.all.infl[oth == 1]/1000000))

# Create the plot

d1_a_f <- ggplot(d1_a, aes(x = year)) +
  geom_line(aes(y = sum_all), linetype = "solid", lwd=1) +
  geom_line(aes(y = sum_con), linetype = "dashed", lwd=1) +
  geom_line(aes(y = sum_lab), linetype = "dotdash", lwd=1) +
  geom_line(aes(y = sum_oth), linetype = "dotted", lwd=1) +
  geom_text(data = data.frame(year = median(d1_a$year), y = d1_a$sum_all[d1_a$year == max(d1_a$year)]), 
            aes(label = "All", x = year, y = y), hjust = 1.4, vjust = 0) +
  geom_text(data = data.frame(year = median(d1_a$year), y = d1_a$sum_con[d1_a$year == median(d1_a$year)]), 
            aes(label = "Con", x = year, y = y), hjust = 1.4, vjust = -0.5) +
  geom_text(data = data.frame(year = median(d1_a$year), y = d1_a$sum_lab[d1_a$year == median(d1_a$year)]), 
            aes(label = "Lab", x = year, y = y), hjust = 1.4, vjust = -1.5) +
  geom_text(data = data.frame(year = median(d1_a$year), y = d1_a$sum_oth[d1_a$year == max(d1_a$year)]), 
            aes(label = "Oth", x = year, y = y), hjust = 1.4, vjust = 0) +
  theme_minimal() +
  labs(x = "Year", y = "Total Earnings in Million £", title = "(a) Total Sector Private Earnings") +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 90, hjust = 1)
  ) +
  geom_vline(xintercept = c(2010, 2015), color = "grey", linetype = "dashed", size = 1) +
  geom_hline(yintercept = 0, color = "grey", linetype = "solid", size = 1) +
  scale_x_continuous(breaks = unique(data$year)) + 
  scale_y_continuous(limits = c(0, 7), breaks = c(0, 1, 2, 3, 4, 5, 6, 7)) + 
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), 
        axis.text.x = element_text(angle = 360), 
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(angle = 90),
        axis.title.y = element_text(size = 8),
        plot.title = element_text(face = "bold", color = "black", size = 10))
  

### Panel b ###
d1_b <- data %>%
  group_by(year) %>%
  summarize(
    share_all = sum(earnings.all.infl>1000)/sum(earnings.all.infl>=0),
    share_con = sum(if_else(con == 1, earnings.all.infl, 0)>1000)/
      sum(if_else(con == 1, earnings.all.infl, -1)>=0),
    share_lab = sum(if_else(lab == 1, earnings.all.infl, 0)>1000)/
      sum(if_else(lab == 1, earnings.all.infl, -1)>=0),
    share_oth = sum(if_else(oth == 1, earnings.all.infl, 0)>1000)/
      sum(if_else(oth == 1, earnings.all.infl, -1)>=0
      ))

#Create the plot 
d1_b_f <- ggplot(d1_b, aes(x = year)) +
  geom_line(aes(y = share_all, group = 1), linetype = "solid", lwd=1) +
  geom_line(aes(y = share_con, group = 1), linetype = "dashed", lwd=1) +
  geom_line(aes(y = share_lab, group = 1), linetype = "dotdash", lwd=1) +
  geom_line(aes(y = share_oth, group = 1), linetype = "dotted", lwd=1) +
  geom_text(data = data.frame(year = median(d1_b$year), y = d1_b$share_all[d1_a$year == max(d1_b$year)]), 
            aes(label = "All", x = year, y = y), hjust = 1.4, vjust = 0) +
  geom_text(data = data.frame(year = median(d1_b$year), y = d1_b$share_con[d1_a$year == max(d1_b$year)]), 
            aes(label = "Con", x = year, y = y), hjust = 1, vjust = -0.5) +
  geom_text(data = data.frame(year = median(d1_b$year), y = d1_b$share_lab[d1_a$year == min(d1_b$year)]), 
            aes(label = "Lab", x = year, y = y), hjust = 1.4, vjust = 0) +
  geom_text(data = data.frame(year = median(d1_b$year), y = d1_b$share_oth[d1_a$year == max(d1_b$year)]), 
            aes(label = "Oth", x = year, y = y), hjust = 1.4, vjust = 0) +
  theme_minimal() +
  labs(x = "Year", y = "Share of MPs with Outside Income", title = "(b) Share of MPs with Private Sector \n Earnings ≥ 1000") +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 90, hjust = 1)
  ) +
  geom_vline(xintercept = c(2010, 2015), color = "grey", linetype = "dashed", size = 1) +
  geom_hline(yintercept = 0, color = "grey", linetype = "solid", size = 1) +
  scale_x_continuous(breaks = unique(data$year)) + 
  scale_y_continuous(limits = c(0, 0.32), breaks = c(0.05, 0.10, 0.15, 0.20, 0.25, 0.30)) + 
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), 
        axis.text.x = element_text(angle = 360), 
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(angle = 90),
        axis.title.y = element_text(size = 8),
        plot.title = element_text(face = "bold", color = "black", size = 10))

### Panel c ###

d1_c <- data %>%
  filter(earnings.all.infl > 0) %>%
  group_by(year) %>%
  summarize(mean_nonull_all = mean(earnings.all.infl),
    mean_nonull_con = mean(earnings.all.infl[con == 1]),
    mean_nonull_lab = mean(earnings.all.infl[lab == 1]),
    mean_nonull_oth = mean(earnings.all.infl[oth == 1]
            ))

#create the plot
d1_c_f <- ggplot(d1_c, aes(x = year)) +
  geom_line(aes(y = mean_nonull_all), linetype = "solid", lwd=1) +
  geom_line(aes(y = mean_nonull_con), linetype = "dashed", lwd=1) +
  geom_line(aes(y = mean_nonull_lab), linetype = "dotdash", lwd=1) +
  geom_line(aes(y = mean_nonull_oth), linetype = "dotted", lwd=1) +
  geom_text(data = data.frame(year = median(d1_c$year), y = d1_c$mean_nonull_all[d1_a$year == median(d1_c$year)]), 
            aes(label = "All", x = year, y = y), hjust = -1, vjust = -1.5) +
  geom_text(data = data.frame(year = median(d1_c$year), y = d1_c$mean_nonull_con[d1_a$year == median(d1_c$year)]), 
            aes(label = "Con", x = year, y = y), hjust = -0.8, vjust = -4) +
  geom_text(data = data.frame(year = median(d1_c$year), y = d1_c$mean_nonull_lab[d1_a$year == median(d1_c$year)]), 
            aes(label = "Lab", x = year, y = y), hjust = -0.8, vjust = 1) +
  geom_text(data = data.frame(year = median(d1_c$year), y = d1_c$mean_nonull_oth[d1_a$year == median(d1_c$year)]), 
            aes(label = "Oth", x = year, y = y), hjust = 1.4, vjust = -0.5) + 
  theme_minimal() +
  labs(x = "Year", y = "Mean Annual Earnings in £", title = "(c) Mean Earnings of MPs with Jobs") +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 0, hjust = 1)
  ) +
  geom_vline(xintercept = c(2010, 2015), color = "grey", linetype = "dashed", size = 1) +
  geom_hline(yintercept = 0, color = "grey", linetype = "solid", size = 1) +
  scale_x_continuous(breaks = unique(data$year)) + 
  scale_y_continuous(limits = c(0, 55000), breaks = c(0, 10000, 20000, 30000, 40000, 50000)) + 
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), 
        axis.text.x = element_text(angle = 360), 
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(angle = 90),
        axis.title.y = element_text(size = 8),
        plot.title = element_text(face = "bold", color = "black", size = 10))

### Panel d ###
d1_d <- data %>%
  summarise(
    sum_director = sum(job_director),
    sum_prof = sum(job_prof),
    sum_consultant = sum(job_consultant),
    sum_board = sum(job_board)
  ) %>%
  pivot_longer(cols = everything(), names_to = "job", values_to = "n") %>%
  mutate(proportion = n / sum(n))


d1_d_f <- ggplot(d1_d, aes(y = proportion, x = fct_reorder(job, proportion))) + 
  geom_col(color = "grey", fill = "grey") + 
  coord_flip() + 
  theme_minimal() +
  labs(x = "", y = "Share", title = "(d) Employment: Share of Job Titles (MP-Years)") +
  scale_x_discrete(labels = c("sum_director" = "Director,\nChairman,\nPresident,\nPartner", 
                              "sum_consultant"="Consultant,\nAdvisor", 
                              "sum_board"="Board\nMember",
                              "sum_prof"="Professional\nPosition")) + 
  scale_y_continuous(limits = c(0, 0.40), breaks = c(0, 0.05, 0.10, 0.15, 0.20, 0.25, 0.30, 0.35)) +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), 
        axis.line.y = element_line(color="grey", size = 0.3), 
        plot.title = element_text(face = "bold", color = "black", size = 10),
        axis.title.x = element_text(size = 8))


### Panel e ###  
d1_e <- data %>%
  summarise(
    sum_health = sum(indcat_health),
    sum_finance = sum(indcat_finance),
    sum_consulting = sum(indcat_consulting),
    sum_knowledge_profit = sum(indcat_knowledge_fp),
    sum_knowledge_noprofit = sum(indcat_knowledge_nfp),
    sum_goods = sum(indcat_goods),
    sum_services = sum(indcat_services), 
    sum_other = sum(indcat_other)
  ) %>%
  pivot_longer(cols = everything(), names_to = "job", values_to = "n") %>%
  mutate(proportion = n / sum(n))



d1_e_f <- ggplot(d1_e, aes(y = proportion, x = fct_relevel(fct_reorder(job, proportion), 'sum_other'))) + 
  geom_col(color = "grey", fill = "grey") + 
  coord_flip() +
  theme_minimal() +
  labs(x = "", y = "Share", title = "(e) Employment: Share in Different Industries \n(MP-Years)") +
  scale_x_discrete(labels = c("sum_goods" = "Goods",
                              "sum_knowledge_profit" ="Knowledge,\nfor-profit",
                              "sum_consulting"= "Consulting", 
                              "sum_finance" = "Finance", 
                              "sum_services" = "Services",
                              "sum_knowledge_noprofit" = "Knowledge,\nnot-for-profit",
                              "sum_health" = "Health", 
                              "sum_other" = "Other")) +
  scale_y_continuous(limits = c(0, 0.25), breaks = c(0, 0.05, 0.10, 0.15, 0.20)) +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(), 
        axis.line.y = element_line(color="grey", size = 0.3), 
        plot.title = element_text(face = "bold", color = "black", size = 10),
        axis.title.x = element_text(size = 8))



grid.arrange(
  d1_a_f, d1_b_f, d1_c_f, 
  d1_d_f, d1_e_f,
  layout_matrix = rbind(c(1, 1, 2, 2, 3, 3),
                        c(4, 4, 4, 5, 5, 5)), 
  top=text_grob("FIGURE 1 Private Sector Earnings of Members of the House of Commons, 2010-2016", 
               size = 15, face = "bold", hjust = 0.7, lineheight = 2))

fig_1 <- arrangeGrob(
  d1_a_f, d1_b_f, d1_c_f, 
  d1_d_f, d1_e_f,
  layout_matrix = rbind(c(1, 1, 2, 2, 3, 3),
                        c(4, 4, 4, 5, 5, 5)), 
  top=text_grob("FIGURE 1 Private Sector Earnings of Members of the House of Commons, 2010-2016", 
                size = 15, face = "bold", hjust = 0.7, lineheight = 2))

ggsave(file="fig_1_assignment2.pdf", fig_1)

#### FIGURE 2 ####

f2a_low <- feols(present ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1 & data$dist.tercile.con==1,])
summary(f2a_low)

f2a_mid <- feols(present ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1 & data$dist.tercile.con==2,])
summary(f2a_mid)

f2a_hig <- feols(present ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1 & data$dist.tercile.con==3,])
summary(f2a_hig)

# Calculating confidence intervals. I am quite proud of this
# Confidence errors calculated by copying outputs from the summaries above

d2_a <- data.frame(param = c("Lowest Tercile", "Middle Tercile", "Highest Tercile"),
                  low = c(0.013623 - 1.96*0.023317, 0.016679 - 1.96*0.010774, 0.057663 - 1.96*0.019405),
                  est = c(0.013623, 0.016679, 0.057663),
                  high = c(0.013623 + 1.96*0.023317, 0.016679 + 1.96*0.010774, 0.057663 + 1.96*0.019405))


 
d2_a_f <- ggplot(d2_a, aes(y = factor(param, c("Highest Tercile", "Middle Tercile", "Lowest Tercile")), x=est)) + 
  scale_y_discrete(labels = c("Highest Tercile" = "Highest\nTercile",
                              "Middle Tercile" ="Middle\nTercile",
                              "Lowest Tercile"= "Lowest\nTercile")) +
  geom_vline(xintercept=0, color="grey") + 
  geom_hline(yintercept = d2_a$param, color="grey", alpha = 0.5) +
  geom_pointrange(aes(xmax = high, xmin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(-0.04, 0.10), breaks = c(-0.02, 0.00, 0.02, 0.04, 0.06, 0.08, 0.10)) +
  labs(x ="Regression Coefficients", y = "", title = "(a) Effect of Moonlighting on Vote\nAttendance, by Constituency\nDistance to London") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


# Panel B - making a fun map!

# Loading in the employment data. Need to limit to only domestic employment and only Conservatives

load("/Users/thomaspadkjaer/Downloads/employment_coords.rda")

locdata <- locdata[locdata$foreign == 0 & locdata$con == 1,]

# I need to include a "group" variable to make the map work, just 1

locdata$group <- 1
data$group <- 1

# So for the author's version of the map, he features all Conservative MPs in the third group as the crow flies from London.
# Then he makes arrows to where those who moonlight are employed.
# I need to merge that ID to employment address in the data file

locdata$id <- as.numeric(locdata$id)

f2b <- right_join(data, locdata, by = "id")

# Making map of UK, limited to only third tercile

UK <- map_data(map = "world", region = "UK") 

UK_map <- ggplot(data = UK, aes(x = long, y = lat, group = group)) + 
  geom_polygon(fill = "white", colour = "black") +
  coord_map(ylim = c(50, 55.5)) +
  geom_point(data = data[data$dist.tercile.con == 3,], aes(x = const.x, y = const.y)) + 
  geom_segment(data = locdata[locdata$dist.tercile.con == 3,], aes(x = employ.x, y = employ.y, xend = const.x, yend = const.y), 
               arrow = arrow(length = unit(0.2, "cm"), ends = "first"), col = "red", alpha = 0.7) + 
  theme_void()

### An improved map - our contribution

# Trying to improve map by:
# Making non-moonligther points more transparent
# Making an area of London, and colouring points where arrows terminate in London
# Changing color of arrows depending on distance to London

# Getting coordinates for City of London and saving them

CoL_y <- 51.51279 
CoL_x <- -0.09184

# Merging these into the locdata by taking the difference between x and y, and then adding those together

locdata$london.x <- abs(CoL_x - locdata$employ.x)
locdata$london.y <- abs(CoL_y - locdata$employ.y)
locdata$london <- locdata$london.x + locdata$london.y


UK_map_2 <- ggplot(data = UK, aes(x = long, y = lat, group = group)) + 
  geom_polygon(fill = "white", colour = "black") +
  coord_map(ylim = c(50, 55.5)) +
  geom_point(data = data[data$dist.tercile.con == 3,], aes(x = const.x, y = const.y), col = "grey", alpha = 0.3, size = 1.5) + 
  geom_point(data = locdata[locdata$dist.tercile.con == 3,], aes(x = const.x, y = const.y), col = "black", alpha = 1, size = 2.5) +
  geom_segment(data = locdata[locdata$dist.tercile.con == 3,], aes(x = employ.x, y = employ.y, xend = const.x, yend = const.y, color = london), 
               arrow = arrow(length = unit(0.2, "cm"), ends = "first"), alpha = 0.35) + 
  scale_color_gradient(low = "red", high = "yellow") +
  theme_void() + 
  theme(legend.position = "none")


# Panel C

# Creating the three regressions with vote attendance as dependent, and moonlighting (bin 1000) as main independent.
# These regressions are copy-pasted from author

f2c_low <- feols(expense.accomodation.rent.bin ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1 & data$dist.tercile.con==1,])
summary(f2c_low)

f2c_mid <- feols(expense.accomodation.rent.bin ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1 & data$dist.tercile.con==2,])
summary(f2c_mid)

f2c_hig <- feols(expense.accomodation.rent.bin ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1 & data$dist.tercile.con==3,])
summary(f2c_hig)

# Calculating confidence intervals.
# Confidence errors calculatted by copying outputs from the summaries above

d2_c <- data.frame(param = c("Lowest Tercile", "Middle Tercile", "Highest Tercile"),
                  low = c(0.039433 - 1.96*0.029593, -0.000047 - 1.96*0.043846, 0.096598 - 1.96*0.036407),
                  est = c(0.039433, -0.000047, 0.096598),
                  high = c(0.039433 + 1.96*0.029593, -0.000047 + 1.96*0.043846, 0.096598 + 1.96*0.036407))

d2_c_f <- ggplot(d2_c, aes(y = factor(param, c("Highest Tercile", "Middle Tercile", "Lowest Tercile")), x=est)) + 
  scale_y_discrete(labels = c("Highest Tercile" = "Highest\nTercile",
                              "Middle Tercile" ="Middle\nTercile",
                              "Lowest Tercile"= "Lowest\nTercile")) +
  geom_vline(xintercept=0, color="grey") + 
  geom_hline(yintercept = d2_c$param, color="grey", alpha = 0.5) +
  geom_pointrange(aes(xmax = high, xmin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(-0.10, 0.20), breaks = c(-0.05, 0.00, 0.05, 0.10, 0.15)) +
  labs(x ="Regression Coefficients", y = "", title = "(c) Effect of Moonlighting Job on\nProbaility of Claiming London\nAllowance, By constiuency distance to London") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


grid.arrange(
  d2_a_f, UK_map, d2_c_f, 
  nrow=1, 
  ncol=3,
  top=text_grob("FIGURE 2 Explaning the Positive Effect of Private Sector Jobs on Vote Participation,Conservative MPs", 
                size = 15, face = "bold", hjust = 0.7, lineheight = 1))

fig_2 <- grid.arrange(
  d2_a_f, UK_map, d2_c_f, 
  nrow=1, 
  ncol=3,
  top=text_grob("FIGURE 2 Explaning the Positive Effect of Private Sector Jobs\non Vote Participation, Conservative MPs", 
                size = 15, face = "bold", hjust = 0.5, lineheight = 1))

ggsave(file="fig_2_assignment2.pdf", fig_2)



#### FIGURE 3 ####

# Panel a

# Effect of employment on asking parliamentary questions. Again copied and renamed from author.
# However, here we can just use the dummies for the job so it makes constructing the plot a bit easier

f3a_reg <- feols(questcount.log ~ I(job_director.1000>0) + I(job_board.1000>0) + I(job_consultant.1000>0) + I(job_prof.1000>0) + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster ~ id, data=data[data$con==1,])
summary(f3a_reg)

# Making a df using a slightly more automated method than copy-pasting

d3_a <- data.frame(param = c("Director, Chairman, President or Partner", "Board Member", "Consultant or Advisor" , "Professional Position"),
                  low = c(f3a_reg$coefficients[1:4] - (f3a_reg$se[1:4]*1.96)),
                  est = c(f3a_reg$coefficients[1:4]),
                  high = c(f3a_reg$coefficients[1:4] + (f3a_reg$se[1:4]*1.96)))

d3_a_f <- ggplot(d3_a, aes(y = factor(param, c("Consultant or Advisor", "Professional Position", "Board Member", "Director, Chairman, President or Partner" )), x=est)) + 
  scale_y_discrete(labels = c("Director, Chairman, President or Partner" = "Director,\nChairman,\nPresident or Partner",
                              "Board Member" ="Board\nMember",
                              "Consultant or Advisor" ="Consultant\nor Advisor",
                              "Professional Position"= "Professional\nPosition")) +
  geom_vline(xintercept=0, color="grey") + 
  geom_hline(yintercept = d3_a$param, color="grey", alpha = 0.5) +
  geom_pointrange(aes(xmax = high, xmin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(-0.2, 0.9), breaks = c(-0.2, 0.0, 0.2, 0.4, 0.6, 0.8)) +
  labs(x ="Regression Coefficients", y = "", title = "(a) Effect of Moonlighting on Vote\nAttendance, by Constituency\nDistance to London") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


# Panel B

# First the regression

f3b_reg <- feols(questcount.log ~ I(indcat_health.1000 > 0) + I(indcat_finance.1000 > 0) + I(indcat_consulting.1000 > 0) + I(indcat_knowledge_fp.1000 > 0) + I(indcat_knowledge_nfp.1000 > 0) + I(indcat_goods.1000 > 0) + I(indcat_services.1000 > 0) + I(indcat_other.1000 > 0) + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster ~ id, data=data[data$con==1,])
summary(f3b_reg)

# Making the dataframe for the graph

d3_b <- data.frame(param = c("Health ", "Finance ", "Consulting ", "Knowledge,\n for-profit ", 
                            "Knowledge,\n not-for-profit", "Goods", "Services", "Other"),
                  low = c(f3b_reg$coefficients[1:8] - (f3b_reg$se[1:8]*1.96)),
                  est = c(f3b_reg$coefficients[1:8]),
                  high = c(f3b_reg$coefficients[1:8] + (f3b_reg$se[1:8]*1.96)))

d3_b_f <- ggplot(d3_b, aes(y = factor(reorder(param, est)), x=est)) + 
  geom_vline(xintercept=0, color="grey") + 
  geom_hline(yintercept = d3_b$param, color="grey", alpha = 0.5) +
  geom_pointrange(aes(xmax = high, xmin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(-0.6, 1.5), breaks = c(-0.5, 0.0, 0.5, 1.0)) +
  labs(x ="Regression Coefficients", y = "", title = "a) Effect of private sector employment\non Written parliamentary questions\nBy job title and industry, only Conservative MPs") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))

grid.arrange(
  d3_a_f, d3_b_f, 
  nrow=1, 
  ncol=2,
  top=text_grob("FIGURE 3 ", 
                size = 15, face = "bold", hjust = 0.7))

fig_3 <- grid.arrange(
  d3_a_f, d3_b_f, 
  nrow=1, 
  ncol=2,
  top=text_grob("FIGURE 3  ", 
                size = 15, face = "bold", hjust = 0.5))

ggsave(file="fig_3_assignment2.pdf", fig_3)




#### FIGURE 4 ####
load("/Users/thomaspadkjaer/Downloads/data_questions_topic.rda")

# Now we need to weed out the committees and questions to Leader of the House (he is not a minister)


# Now we need to weed out the committees and questions to Leader of the House (he is not a minister)

Ministries <- questtopicdata[!(questtopicdata$topic %in% c("Committee on the Electoral Commission",
                                                           "Committee, Parliamentary Standards Authority",
                                                           "House of Commons Commission",
                                                           "Leader of the House")), ]

# Sorting to only Conservatvies

Ministries <- Ministries[Ministries$con == 1,]

# Making a list of all the ministries

m_list <- unique(Ministries$topic)

# I need to run many regressions and I will try to automate

# Making a list of regression models for each filtered data

#Defining a list
regression_models <- list()

# Grouping the variables (honestly should have done this before)
response_variable <- "questcount.log"
predictor_variables <- c("bin.1000", "minister", "minister.state", "undersec", 
                         "frontbench.team", "com.chair", "com.member", "enter", "leave", 
                         "year", "id")

# Making a loop that will make a list of each regression, which I can then extract estimate for bin.1000
# as well as the standard errors from

for (ministry in m_list) {
  ministry_data <- Ministries[Ministries$topic == ministry, ]
  
  formula <- as.formula(paste(response_variable, "~", paste(predictor_variables, collapse = " + ")))
  
  model <- feols(formula, data = ministry_data)
  
  regression_models[[ministry]] <- model
}


# Now I have this lovely list. time to combine them in a dataframe!

param <- names(regression_models)
std <- sapply(regression_models, function(model) coeftable(model)[2,2])
est <- sapply(regression_models, function(model) coef(model)["bin.1000"])

# Honestly I should be hired by Harvard, lets go!

d4 <- data.frame(
  param = param,
  low = est - std * 1.96,
  est = est,
  high = est + std * 1.96
)


# Time to make the graph! Making it vertical and a few tweaks since the list is so large now
d4_f <- ggplot(d4, aes(y = factor(reorder(param, est)), x=est)) + 
  geom_vline(xintercept=0, color="grey") + 
  geom_hline(yintercept = d4$param, color="grey", alpha = 0.5) +
  geom_pointrange(aes(xmax = high, xmin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(-0.1, 0.35), breaks = c(-0.1, 0.0, 0.1, 0.2, 0.3)) +
  labs(x ="Regression Coefficients", y = "") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))

grid.arrange(
  d4_f, 
  nrow=1, 
  ncol=1,
  top=text_grob("FIGURE 4 ", 
                size = 15, face = "bold", hjust = 0.7))

fig_4 <- grid.arrange(
  d4_f, 
  nrow=1, 
  ncol=1,
  top=text_grob("FIGURE 4 ", 
                size = 15, face = "bold", hjust = 0.7))

ggsave(file="fig_4_assignment2.pdf", fig_4)


#### FIGURE 5 ####

# We need new data again, this time about different characteristics about the Ministries. So loading than in

min_charac <- read_csv("/Users/thomaspadkjaer/Downloads/department_characteristics.csv")

# Renaming and merging in the point estimates

min_charac <- min_charac %>%
  rename("param" = "topic")

d5 <- right_join(min_charac, d4, by='param')

# So now we need four regressions, using the log of these four columns. F


d5_a_f <- ggplot(d5, aes(x = log(d5$proc.amount + 1), y = d5$est)) + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(0, 4.5), breaks = c(0, 1, 2, 3, 4) ) +
  scale_y_continuous(limits = c(-0.1, 0.35), breaks = c(-0.1, 0.0, 0.1, 0.2, 0.3)) +
  labs(x ="(a)Procurement spending", y = "Regression Coefficients", 
       title = "log(Procurement spending in Bn.£ + 1)") +
  geom_smooth(method = lm, se = FALSE, color = "black", fullrange=TRUE) + 
  stat_correlation() +
  theme_minimal ()  +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))




d5_b_f <- ggplot(d5, aes(x = log(d5$projects.number + 1), y = d5$est)) + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(0, 4.5), breaks = c(0, 1, 2, 3) ) +
  scale_y_continuous(limits = c(-0.1, 0.35), breaks = c(-0.1, 0.0, 0.1, 0.2, 0.3)) +
  labs(x ="log(No. Major projects + 1)", y = "Regression Coefficients", 
       title = "(b)Number of major projects") +
  geom_smooth(method = lm, se = FALSE, color = "black", fullrange=TRUE) + 
  stat_correlation() +
  theme_minimal ()  +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))

d5_c_f <- ggplot(d5, aes(x = log(d5$budget.amount + 1), y = d5$est)) + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(0, 5.5), breaks = c(0, 1, 2, 3, 4, 5) ) +
  scale_y_continuous(limits = c(-0.1, 0.35), breaks = c(-0.1, 0.0, 0.1, 0.2, 0.3)) +
  labs(x ="log(Operating Budget, Bn. £ + 1)", y = "Regression Coefficients", 
       title = "(c) Operating Budget, Bn. £") +
  geom_smooth(method = lm, se = FALSE, color = "black", fullrange=TRUE) + 
  stat_correlation() +
  theme_minimal ()  +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))



d5_d_f <- ggplot(d5, aes(x = log(d5$employees + 1), y = d5$est)) + 
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_continuous(limits = c(3, 12), breaks = c(4, 6, 8, 10) ) +
  scale_y_continuous(limits = c(-0.1, 0.35), breaks = c(-0.1, 0.0, 0.1, 0.2, 0.3)) +
  labs(x ="log(No. of employees+ 1", y = "Regression Coefficients", title = "(d)Number of employees") +
  geom_smooth(method = lm, se = FALSE, color = "black", fullrange=TRUE) + 
  stat_correlation(aes(x = log(d5$employees + 1), y = d5$est), method = "pearson") +
  theme_minimal ()  +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


grid.arrange(
  d5_a_f, d5_b_f,
  d5_c_f, d5_d_f,
  nrow=2, 
  ncol=2,
  top=text_grob("FIGURE 5 ", 
                size = 15, face = "bold", hjust = 0.7))

fig_5 <- grid.arrange(
  d5_a_f, d5_b_f,
  d5_c_f, d5_d_f,
  nrow=2, 
  ncol=2,
  top=text_grob("FIGURE 5 ", 
                size = 15, face = "bold", hjust = 0.7))

ggsave(file="fig_5_assignment2.pdf", fig_5)

#### Figure 6 ####

# Running all regressions

a6 <- feols(quest.code.internalpolicy.log ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster ~ id, data=data[data$con==1,])
b6 <- feols(quest.code.factualinfo.log ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster ~ id, data=data[data$con==1,])
c6 <- feols(quest.code.timing.log ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster ~ id, data=data[data$con==1,])
d6 <- feols(quest.code.urgingaction.log ~ bin.1000 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster ~ id, data=data[data$con==1,])

# Combining a list

f6_list <- list(a6 = a6, b6 = b6, c6 = c6, d6 = d6)

# Getting estimates and upper-lower bounds

param <- c("int policy", "fac.info", "timing", "urge_action")
std <- sapply(f6_list, function(model) se(model)[1])
est <- sapply(f6_list, function(model) coef(model)[1])

# Combining lists into a df for the model

f6 <- data.frame(
  param = param,
  low = est - std * 1.96,
  est = est,
  high = est + std * 1.96
)

#### FIGURE 7 ####

## Panel A ##

f7a_reg <- feols(rebel~ beforejob.2 + beforejob.1 + bin.1000 + afterjob.1 + afterjob.2 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1,])


d7_a <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(f7a_reg$coefficients[1:5] - (f7a_reg$se[1:5]*1.96)),
                  est = c(f7a_reg$coefficients[1:5]),
                  high = c(f7a_reg$coefficients[1:5] + (f7a_reg$se[1:5]*1.96)))


d7_a_f <- ggplot(d7_a, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-0.007, 0.004), breaks = c(-0.006, -0.004, -0.002, 0.000, 0.002)) +
  labs(x ="", y = "Coefficient", title = "(a) Vote Rebellion") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))

## Panel B ##

f7b_reg <- feols(present ~ beforejob.2 + beforejob.1 + bin.1000 + afterjob.1 + afterjob.2 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1 & data$dist.tercile.con == 3,])

d7_b <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(f7b_reg$coefficients[1:5] - (f7b_reg$se[1:5]*1.96)),
                  est = c(f7b_reg$coefficients[1:5]),
                  high = c(f7b_reg$coefficients[1:5] + (f7b_reg$se[1:5]*1.96)))

d7_b_f <- ggplot(d7_b, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-0.05, 0.15), breaks = c(-0.05, 0.00, 0.05, 0.10, 0.15 )) +
  labs(x ="", y = "Coefficient", title = "(b) Vote Participation, Highest Distance Tercile") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


## Panel C ##

d7_c_reg <- feols(questcount.log ~ beforejob.2 + beforejob.1 + bin.1000 + afterjob.1 + afterjob.2 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster = ~ id, data=data[data$con==1,])

d7_c <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(d7_c_reg$coefficients[1:5] - (d7_c_reg$se[1:5]*1.96)),
                  est = c(d7_c_reg$coefficients[1:5]),
                  high = c(d7_c_reg$coefficients[1:5] + (d7_c_reg$se[1:5]*1.96)))


d7_c_f <- ggplot(d7_c, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-1, 1), breaks = c(-0.5, 0, 0.5 )) +
  labs(x ="", y = "Coefficient", title = "(c) Written Parliamentary Questions (log+1)") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


grid.arrange(
  d7_a_f, 
  d7_b_f,
  d7_c_f,
  nrow=3, 
  ncol=1,
  top=text_grob("FIGURE 7 ", 
                size = 15, face = "bold", hjust = 0.7))

fig_7 <- grid.arrange(
  d7_a_f, 
  d7_b_f,
  d7_c_f,
  nrow=3, 
  ncol=1,
  top=text_grob("FIGURE 7 ", 
                size = 15, face = "bold", hjust = 0.7))

ggsave(file="fig_7_assignment2.pdf", fig_7)












#### FIGURE 8 ####
# Regression model for job titles

jobs_reg <- feols(questcount.log ~ beforejob.job_director.1000.2 + beforejob.job_director.1000.1 + I(job_director.1000>0) + afterjob.job_director.1000.1 + afterjob.job_director.1000.2 + beforejob.job_board.1000.2 + beforejob.job_board.1000.1 + I(job_board.1000>0) + afterjob.job_board.1000.1 + afterjob.job_board.1000.2 + beforejob.job_consultant.1000.2 + beforejob.job_consultant.1000.1 + I(job_consultant.1000>0) + afterjob.job_consultant.1000.1 + afterjob.job_consultant.1000.2 + beforejob.job_prof.1000.2 + beforejob.job_prof.1000.1 + I(job_prof.1000>0) + afterjob.job_prof.1000.1 + afterjob.job_prof.1000.2 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster ~ id, data=data[data$con==1,])
summary(jobs_reg)

# Regression model for industries

ind_reg <- felm(questcount.log ~ beforejob.indcat_health.1000.2 + beforejob.indcat_health.1000.1 + I(indcat_health.1000>0) + afterjob.indcat_health.1000.1 + afterjob.indcat_health.1000.2 + beforejob.indcat_finance.1000.2 + beforejob.indcat_finance.1000.1 + I(indcat_finance.1000>0) + afterjob.indcat_finance.1000.1 + afterjob.indcat_finance.1000.2 + beforejob.indcat_consulting.1000.2 + beforejob.indcat_consulting.1000.1 + I(indcat_consulting.1000>0) + afterjob.indcat_consulting.1000.1 + afterjob.indcat_consulting.1000.2 + beforejob.indcat_knowledge_fp.1000.2 + beforejob.indcat_knowledge_fp.1000.1 + I(indcat_knowledge_fp.1000>0) + afterjob.indcat_knowledge_fp.1000.1 + afterjob.indcat_knowledge_fp.1000.2 + beforejob.indcat_knowledge_nfp.1000.2 + beforejob.indcat_knowledge_nfp.1000.1 + I(indcat_knowledge_nfp.1000>0) + afterjob.indcat_knowledge_nfp.1000.1 + afterjob.indcat_knowledge_nfp.1000.2 + beforejob.indcat_goods.1000.2 + beforejob.indcat_goods.1000.1 + I(indcat_goods.1000>0) + afterjob.indcat_goods.1000.1 + afterjob.indcat_goods.1000.2 + beforejob.indcat_services.1000.2 + beforejob.indcat_services.1000.1 + I(indcat_services.1000>0) + afterjob.indcat_services.1000.1 + afterjob.indcat_services.1000.2 + beforejob.indcat_other.1000.2 + beforejob.indcat_other.1000.1 + I(indcat_other.1000>0) + afterjob.indcat_other.1000.1 + afterjob.indcat_other.1000.2 + minister + minister.state + undersec + frontbench.team + com.chair + com.member + enter + leave | year + id, cluster ~ id, data=data[data$con==1,])
summary(ind_reg)

# Making a lot of models
d8_a <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(jobs_reg$coefficients[1:5] - (jobs_reg$se[1:5]*1.96)),
                  est = c(jobs_reg$coefficients[1:5]),
                  high = c(jobs_reg$coefficients[1:5] + (jobs_reg$se[1:5]*1.96)))

d8_a_f <- ggplot(d8_a, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-1.25, 1), breaks = c(-1.0, -0.5, 0.0, 0.5)) +
  labs(x ="", y = "Coefficient", title = "(a) Job Title: Director,\nChairman, President,\nPartner") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))



d8_b <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(jobs_reg$coefficients[6:10] - (jobs_reg$se[6:10]*1.96)),
                  est = c(jobs_reg$coefficients[6:10]),
                  high = c(jobs_reg$coefficients[6:10] + (jobs_reg$se[6:10]*1.96)))

d8_b_f <- ggplot(d8_b, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-1.3, 1), breaks = c(-1.0, -0.5, 0.0, 0.5)) +
  labs(x ="", y = "Coefficient", title = "(a) Job Title: Director,\nChairman, President,\nPartner") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))

d8_c <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                   low = c(jobs_reg$coefficients[16:20] - (jobs_reg$se[16:20]*1.96)),
                   est = c(jobs_reg$coefficients[16:20]),
                   high = c(jobs_reg$coefficients[16:20] + (jobs_reg$se[16:20]*1.96)))

d8_c_f <- ggplot(d8_c, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-1.25, 1), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "(a) Job Title: Director,\nChairman, President,\nPartner") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


d8_d <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(jobs_reg$coefficients[11:15] - (jobs_reg$se[11:15]*1.96)),
                  est = c(jobs_reg$coefficients[11:15]),
                  high = c(jobs_reg$coefficients[11:15] + (jobs_reg$se[11:15]*1.96)))

d8_d_f <- ggplot(d8_d, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-1.25, 1), breaks = c(-1.0, -0.5, 0.0, 0.5)) +
  labs(x ="", y = "Coefficient", title = "(a) Job Title: Director,\nChairman, President,\nPartner") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


d8_health <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(ind_reg$coefficients[1:5] - (ind_reg$se[1:5]*1.96)),
                  est = c(ind_reg$coefficients[1:5]),
                  high = c(ind_reg$coefficients[1:5] + (ind_reg$se[1:5]*1.96)))

d8_health_f <- ggplot(d8_health, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-2, 2), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "health") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))

d8_finance <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(ind_reg$coefficients[6:10] - (ind_reg$se[6:10]*1.96)),
                  est = c(ind_reg$coefficients[6:10]),
                  high = c(ind_reg$coefficients[6:10] + (ind_reg$se[6:10]*1.96)))

d8_finance_f <- ggplot(d8_finance, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-2, 2), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "finance") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))

d8_consulting <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(ind_reg$coefficients[11:15] - (ind_reg$se[11:15]*1.96)),
                  est = c(ind_reg$coefficients[11:15]),
                  high = c(ind_reg$coefficients[11:15] + (ind_reg$se[11:15]*1.96)))

d8_consulting_f <- ggplot(d8_consulting, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-2, 2), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "consulting") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


d8_knowledgefp <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(ind_reg$coefficients[16:20] - (ind_reg$se[16:20]*1.96)),
                  est = c(ind_reg$coefficients[16:20]),
                  high = c(ind_reg$coefficients[16:20] + (ind_reg$se[16:20]*1.96)))

d8_knowledgefp_f <- ggplot(d8_knowledgefp, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-2, 2), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "knowledge fp") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


d8_knowledgenfp <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(ind_reg$coefficients[21:25] - (ind_reg$se[21:25]*1.96)),
                  est = c(ind_reg$coefficients[21:25]),
                  high = c(ind_reg$coefficients[21:25] + (ind_reg$se[21:25]*1.96)))

d8_knowledgenfp_f <- ggplot(d8_knowledgenfp, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-2, 2), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "knowledge nfp") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


d8_goods <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(ind_reg$coefficients[26:30] - (ind_reg$se[26:30]*1.96)),
                  est = c(ind_reg$coefficients[26:30]),
                  high = c(ind_reg$coefficients[26:30] + (ind_reg$se[26:30]*1.96)))

d8_goods_f <- ggplot(d8_goods, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-2, 1.5), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "goods") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))


d8_services <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(ind_reg$coefficients[31:35] - (ind_reg$se[31:35]*1.96)),
                  est = c(ind_reg$coefficients[31:35]),
                  high = c(ind_reg$coefficients[31:35] + (ind_reg$se[31:35]*1.96)))

d8_services_f <- ggplot(d8_services, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-2, 1.5), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "services") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))



d8_other <- data.frame(param = c("-2", "-1", "in Job", "1", "2"),
                  low = c(ind_reg$coefficients[36:40] - (ind_reg$se[36:40]*1.96)),
                  est = c(ind_reg$coefficients[36:40]),
                  high = c(ind_reg$coefficients[36:40] + (ind_reg$se[36:40]*1.96)))

d8_other_f <- ggplot(d8_other, aes(x = factor(param, level = c("-2", "-1", "in Job", "1", "2")), y=est)) + 
  geom_hline(yintercept = 0, color="grey", alpha = 0.5) +
  geom_vline(xintercept = c(2.5, 3.5), color = "grey", linetype = 5) +
  geom_pointrange(aes(ymax = high, ymin = low), color = "black", linewidth = 1) + 
  scale_x_discrete(breaks = c("-2", "-1", "in Job", "1", "2")) +
  scale_y_continuous(limits = c(-2, 1.5), breaks = c(-2, -1, 0, 1)) +
  labs(x ="", y = "Coefficient", title = "other") +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
        axis.line.x = element_line(color="grey", size = 0.5),
        axis.title.x = element_text(size = 10), 
        axis.text.x =  element_text(size = 8),
        axis.line.y = element_line(color="grey", size = 0.5),
        axis.text.y = element_text(size = 10, angle = 0),
        plot.title = element_text(face = "bold", color = "black", size = 10))




grid.arrange(
  d8_a_f, d8_b_f, d8_c_f, d8_d_f,
  d8_knowledgefp_f, d8_finance_f, d8_other_f, d8_goods_f,
  d8_health_f, d8_services_f, d8_knowledgenfp_f, d8_consulting_f,
  nrow=3, 
  ncol=4,
  top=text_grob("FIGURE 8 ", 
                size = 15, face = "bold", hjust = 0.7))

fig_8 <- grid.arrange(
  d8_a_f, d8_b_f, d8_c_f, d8_d_f,
  d8_knowledgefp_f, d8_finance_f, d8_other_f, d8_goods_f,
  d8_health_f, d8_services_f, d8_knowledgenfp_f, d8_consulting_f,
  nrow=3, 
  ncol=4,
  top=text_grob("FIGURE 8 ", 
                size = 15, face = "bold", hjust = 0.7))

ggsave(file="fig_8_assignment2.pdf", fig_8)





